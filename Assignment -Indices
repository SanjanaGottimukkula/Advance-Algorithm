#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

vector<int> twoSum(vector<int>& nums, int target)
{
    unordered_map<int, int> map;
    vector<int> result;

    for (int i = 0; i < nums.size(); i++)
{
        int complement = target - nums[i];
        if (map.find(complement) != map.end())
{
            result.push_back(map[complement]);
            result.push_back(i);
            return result;
        }
        map[nums[i]] = i;
    }

    return result; 
}

int main()
{
    int n;
    cout << "Enter the number of elements: ";
    cin >> n;

    vector<int> nums;
    cout << "Enter the elements one by one:" << endl;
    for (int i = 0; i < n; i++) {
        int num;
        cout << "Element " << i + 1 << ": ";
        cin >> num;
        nums.push_back(num);
    }

    int target;
    cout << "Enter the target sum: ";
    cin >> target;

    vector<int> result = twoSum(nums, target);

    if (result.size() == 2) {
        cout << "Indices: " << result[0] << ", " << result[1] << endl;
        cout << "Numbers: " << nums[result[0]] << ", " << nums[result[1]] << endl;
    } else {
        cout << "No solution found." << endl;
    }

    return 0;
}
